name: Shopping Cart CI/CD

on:
  push:
    branches:
      - main
      - feature/**
      - bugfix/**
      - release/**
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/my-project

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # fix git 128 error
          submodules: true # if repo uses submodules

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/my-project/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint --if-present

      - name: Run Tests
        run: npm test --if-present

      - name: Build Backend
        run: npm run build --if-present

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/my-project/dist


  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Run Linter
        run: npm run lint --if-present

      - name: Run Tests
        run: npm test --if-present

      - name: Build Frontend
        run: npm run build --if-present

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build


  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: 
      - backend
      - frontend
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: backend-dist

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend-build

      - name: Deploy to Server
        run: |
          echo "Deploying Backend from backend-dist"
          echo "Deploying Frontend from frontend-build"
